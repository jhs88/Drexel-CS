[00400024] 23bdfff8  addi $29, $29, -8        ; 14: sub $sp,$sp,8 # push stack 
    PC = 400024
    R31 [ra] = 400018

[00400028] afbf0000  sw $31, 0($29)           ; 15: sw $ra,0($sp) # save return address 
    PC = 400028
    R29 [sp] = 7ffff510

[0040002c] 3c011001  lui $1, 4097 [A]         ; 18: la $a0,A # address of A 
    PC = 40002C

[00400030] 34240000  ori $4, $1, 0 [A]
    PC = 400030
    R1 [at] = 10010000

[00400034] 3c011001  lui $1, 4097 [n]         ; 19: la $a1,n # address of n 
    PC = 400034
    R4 [a0] = 10010000

[00400038] 34250028  ori $5, $1, 40 [n]     
    PC = 400038

[0040003c] 8ca50000  lw $5, 0($5)             ; 20: lw $a1,0($a1) # load value of n 
    PC = 40003C
    R5 [a1] = 10010028

[00400040] 0c10001c  jal 0x00400070 [sump]    ; 21: jal sump # call sump function 
    PC = 400040
    R5 [a1] = a

[00400070] 23bdfffc  addi $29, $29, -4        ; 45: sub $sp,$sp,4 # push stack 
    PC = 400070
    R31 [ra] = 400044

[00400074] afb00000  sw $16, 0($29)           ; 46: sw $s0,0($sp) # save $s0 
    PC = 400074
    R29 [sp] = 7FFFF50C

[00400078] 00044021  addu $8, $0, $4          ; 48: move $t0,$a0 # p = &A[0] 
    PC = 400078

[0040007c] 00a54820  add $9, $5, $5           ; 49: add $t1,$a1,$a1 # $t1 = size * 2 
    PC = 40007C
    R8 [t0] = 10010000

[00400080] 01294820  add $9, $9, $9           ; 50: add $t1,$t1,$t1 # $t1 = size * 4 
    PC = 400080
    R9 [t1] = 14

[00400084] 01095020  add $10, $8, $9          ; 51: add $t2,$t0,$t1 # $t2 = &A[size] 
    PC = 400084
    R9 [t1] = 28

[00400088] 00008020  add $16, $0, $0          ; 52: add $s0,$zero,$zero # $s0 = s = 0 
    PC = 400088
    R10 [t2] = 10010028

[0040008c] 8d0b0000  lw $11, 0($8)            ; 54: lw $t3,0($t0) # $t3 = memory[p] 
    PC = 40008C

[00400090] 020b8020  add $16, $16, $11        ; 55: add $s0,$s0,$t3 # s = s + *p 
    PC = 400090
    R11 [t3] = 1

[00400094] 21080004  addi $8, $8, 4           ; 56: add $t0,$t0,4 # p = p + 1 
    PC = 400094
    R16 [s0] = 1

[00400098] 010a482a  slt $9, $8, $10          ; 57: slt $t1,$t0,$t2 # test if p 
    PC = 400098
    R8 [t0] = 10010004

[0040009c] 1520fffc  bne $9, $0, -16 [Loop-0x0040009c]
    PC = 40009C
    R9 [t1] = 1

Goes back to loop until 
    PC       = 4000a0
    R1  [at] = 10010000
    R2  [v0] = 4
    R4  [a0] = 10010000
    R5  [a1] = a
    R6  [a2] = 7ffff524
    R8  [t0] = 10010028
    R10 [t2] = 10010028
    R11 [t3] = a
    R16 [s0] = 37
    R28 [gp] = 10008000
    R29 [sp] = 7ffff50c
    R31 [ra] = 400044

Then it grabs data for the print to the console and prints the sum of the array

Data:
    [10010000]    00000001  00000002  00000003  00000004    . . . . . . . . . . . . . . . . 
    [10010010]    00000005  00000006  00000007  00000008    . . . . . . . . . . . . . . . . 
    [10010020]    00000009  0000000a  0000000a  20656854    . . . . . . . . . . . . T h e   
    [10010030]    206d7573  7420666f  65206568  656d656c    s u m   o f   t h e   e l e m e 
    [10010040]    2073746e  41206e69  00203d20  00000000    n t s   i n   A   =   . . . . . 

Console:
    "The sum of the elements in A = 55"

    PC       = 400064
    R1  [at] = 10010000
    R2  [v0] = 1
    R4  [a0] = 37
    R5  [a1] = a
    R6  [a2] = 7ffff524
    R8  [t0] = 10010028
    R10 [t2] = 10010028
    R11 [t3] = a
    R28 [gp] = 10008000
    R29 [sp] = 7ffff510
    R31 [ra] = 400044